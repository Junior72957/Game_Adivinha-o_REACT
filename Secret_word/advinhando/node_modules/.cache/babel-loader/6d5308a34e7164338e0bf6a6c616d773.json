{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo Junior\\\\Desktop\\\\React\\\\Projeto_Jogo_Advinha\\xE7\\xE3o\\\\Secret_word\\\\advinhando\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// CSS\nimport './App.css'; // React\n\nimport { useCallback, useEffect, useState } from 'react'; //data \n\nimport { wordsList } from './data/words'; // components\n\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stages = [{\n  id: 1,\n  name: \"start\"\n}, {\n  id: 2,\n  name: \"game\"\n}, {\n  id: 3,\n  name: \"end\"\n}];\n\nfunction App() {\n  _s();\n\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  const [guesses, setGuesses] = useState(5);\n  const [score, setScore] = useState(0);\n  const [guessedLetters, serGuessLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n\n  const pickeWordAndCategory = () => {\n    // pick a random category\n    const categories = Object.keys(words);\n    const category = categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    console.log(category); //pick a random word\n\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n    console.log(words);\n    return {\n      word,\n      category\n    };\n  }; //starts the secret word game\n\n\n  const startGame = () => {\n    // pick word and pick category\n    const {\n      word,\n      category\n    } = pickeWordAndCategory(); // create an array of letters\n\n    let wordLetters = word.split(\"\");\n    wordLetters = wordLetters.map(l => l.toLowerCase());\n    console.log(word, category);\n    console.log(wordLetters); // fill states\n\n    setPickedWord(words);\n    setPickedCategory(category);\n    setLetters(letters);\n    setGameStage(stages[1].name);\n  }; // process the letter input\n\n\n  const verifyLetter = () => {\n    setGameStage(stages[2].name);\n  }; // restarts the game\n\n\n  const retry = () => {\n    setGameStage(stages[0].name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStage === \"start\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 32\n    }, this), gameStage === \"game\" && /*#__PURE__*/_jsxDEV(Game, {\n      verifyLetter: verifyLetter,\n      pickedWord: pickedWord,\n      pickedCategory: pickedCategory,\n      letters: letters,\n      guessedLetters: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }, this), gameStage === \"end\" && /*#__PURE__*/_jsxDEV(GameOver, {\n      retry: retry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pRYTbpBz2Vz1JzeiV11LRJq8I5U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useCallback","useEffect","useState","wordsList","StartScreen","Game","GameOver","stages","id","name","App","gameStage","setGameStage","words","pickedWord","setPickedWord","pickedCategory","setPickedCategory","letters","setLetters","guesses","setGuesses","score","setScore","guessedLetters","serGuessLetters","wrongLetters","setWrongLetters","pickeWordAndCategory","categories","Object","keys","category","Math","floor","random","length","console","log","word","startGame","wordLetters","split","map","l","toLowerCase","verifyLetter","retry"],"sources":["C:/Users/Eduardo Junior/Desktop/React/Projeto_Jogo_Advinhação/Secret_word/advinhando/src/App.js"],"sourcesContent":["// CSS\nimport './App.css';\n\n// React\nimport {useCallback, useEffect, useState} from 'react';\n\n//data \nimport { wordsList } from './data/words';\n\n// components\nimport StartScreen from './components/StartScreen';\nimport Game from './components/Game';\nimport GameOver from './components/GameOver';\n\nconst stages = [\n  {id: 1, name: \"start\"},\n  {id: 2, name: \"game\"},\n  {id: 3, name: \"end\"},\n];\n\nfunction App() {\n  const [gameStage, setGameStage] = useState(stages[0].name);\n  const [words] = useState(wordsList);\n\n  const [pickedWord, setPickedWord] = useState(\"\");\n  const[pickedCategory, setPickedCategory] = useState(\"\");\n  const [letters, setLetters] = useState([]);\n  const [guesses, setGuesses] = useState(5);\n  const[score, setScore] = useState(0);\n\n  const [guessedLetters, serGuessLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n\n  const pickeWordAndCategory = () => {\n    // pick a random category\n    const categories = Object.keys(words);\n    const category = \n    categories[Math.floor(Math.random() * Object.keys(categories).length)];\n    \n    console.log(category);\n\n    //pick a random word\n    const word = words[category][Math.floor(Math.random() * words[category].length)];\n\n    console.log(words);\n\n    return {word, category}\n  }\n\n\n  //starts the secret word game\n  const startGame = () => {\n    // pick word and pick category\n    const { word, category} = pickeWordAndCategory();\n\n    // create an array of letters\n\n    let wordLetters = word.split (\"\");\n\n    wordLetters = wordLetters.map((l) => l.toLowerCase());\n\n\n    console.log(word, category);\n    console.log(wordLetters);\n\n    // fill states\n    setPickedWord(words);\n    setPickedCategory(category);\n    setLetters(letters);\n\n    setGameStage(stages[1].name);\n  };\n\n  // process the letter input\n  const verifyLetter = () => {\n    setGameStage(stages[2].name);\n  };\n\n  // restarts the game\n  const retry = () => {\n    setGameStage(stages[0].name);\n  };\n\n  return (\n    <div className=\"App\">\n      {gameStage ===\"start\" && <StartScreen startGame={startGame}/>}\n      {gameStage ===\"game\" && <Game verifyLetter={verifyLetter} \n      pickedWord={pickedWord} \n      pickedCategory={pickedCategory} \n      letters={letters}\n      guessedLetters />}\n      {gameStage === \"end\" && <GameOver retry={retry} />}      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}